section {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, auto);
    gap: 20px 10px; /* 20px vertical gap, 10px horizontal gap */
}

/* Solo se aplica al primer elemento de la clase elem */
section .elem.el1:first-of-type {
    grid-column: 1 / 3;
}

/* Solo se aplica al segundo elemento de la clase elem */
section .elem.el2:nth-of-type(2) {
    grid-column: 3 / 5;
    grid-row: span 2;
}

/* El ultimo elemento de la clase elem */
section .elem.el4:last-child {
    grid-column: 1 / 5;
}

/* El tercer elemento de la clase elem */
section div:nth-of-type(3) {
    grid-row: span 3;
}

section div:nth-of-type(8) {
    grid-column: span 2;
}

section div:nth-of-type(7) {
    grid-row: span 2;
}

/*
Las propiedades `grid-column-start` y `grid-column-end`, así como `grid-row-start` y `grid-row-end`, son utilizadas en CSS Grid para definir dónde comienza y termina un elemento de la cuadrícula en las columnas y filas respectivamente.

Por otro lado, `grid-column` y `grid-row` son propiedades abreviadas que combinan las propiedades de inicio y fin en una sola declaración.

Por ejemplo, si tienes un elemento que quieres que comience en la segunda columna y termine en la cuarta, podrías usar `grid-column-start: 2;` y `grid-column-end: 4;`. Pero con la propiedad abreviada, puedes lograr lo mismo con `grid-column: 2 / 4;`.

Lo mismo aplica para `grid-row`. Si quieres que un elemento comience en la primera fila y termine en la tercera, podrías usar `grid-row-start: 1;` y `grid-row-end: 3;`. Pero con la propiedad abreviada, puedes lograr lo mismo con `grid-row: 1 / 3;`.

En resumen, `grid-column` y `grid-row` son formas más concisas de definir dónde comienza y termina un elemento de la cuadrícula en las columnas y filas respectivamente.
 */